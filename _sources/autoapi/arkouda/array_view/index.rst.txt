:py:mod:`arkouda.array_view`
============================

.. py:module:: arkouda.array_view


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   arkouda.array_view.ArrayView




Attributes
~~~~~~~~~~

.. autoapisummary::

   arkouda.array_view.OrderType


.. py:data:: OrderType
   

   

.. py:class:: ArrayView(base: arkouda.pdarrayclass.pdarray, shape, order='row_major')

   A multi-dimensional view of a pdarray. Arkouda ``ArraryView`` behaves similarly to numpy's ndarray.
   The base pdarray is stored in 1-dimension but can be indexed and treated logically as if it were multi-dimensional

   .. attribute:: base

      The base pdarray that is being viewed as a multi-dimensional object

      :type: pdarray

   .. attribute:: dtype

      The element type of the base pdarray (equivalent to base.dtype)

      :type: dtype

   .. attribute:: size

      The number of elements in the base pdarray (equivalent to base.size)

      :type: int_scalars

   .. attribute:: shape

      A pdarray specifying the sizes of each dimension of the array

      :type: pdarray[int]

   .. attribute:: ndim

      Number of dimensions (equivalent to shape.size)

      :type: int_scalars

   .. attribute:: itemsize

      The size in bytes of each element (equivalent to base.itemsize)

      :type: int_scalars

   .. attribute:: order

      Index order to read and write the elements.
      By default or if 'C'/'row_major', read and write data in row_major order
      If 'F'/'column_major', read and write data in column_major order

      :type: str {'C'/'row_major' | 'F'/'column_major'}

   .. py:method:: __len__(self)


   .. py:method:: __repr__(self)

      Return repr(self).


   .. py:method:: __str__(self)

      Return str(self).


   .. py:method:: __getitem__(self, key)


   .. py:method:: __setitem__(self, key, value)


   .. py:method:: to_ndarray(self) -> numpy.ndarray

      Convert the ArrayView to a np.ndarray, transferring array data from the
      Arkouda server to client-side Python. Note: if the ArrayView size exceeds
      client.maxTransferBytes, a RuntimeError is raised.

      :returns: A numpy ndarray with the same attributes and data as the ArrayView
      :rtype: np.ndarray

      :raises RuntimeError: Raised if there is a server-side error thrown, if the ArrayView size
          exceeds the built-in client.maxTransferBytes size limit, or if the bytes
          received does not match expected number of bytes

      .. rubric:: Notes

      The number of bytes in the array cannot exceed ``client.maxTransferBytes``,
      otherwise a ``RuntimeError`` will be raised. This is to protect the user
      from overflowing the memory of the system on which the Python client
      is running, under the assumption that the server is running on a
      distributed system with much more memory than the client. The user
      may override this limit by setting client.maxTransferBytes to a larger
      value, but proceed with caution.

      .. seealso:: :obj:`array`

      .. rubric:: Examples

      >>> a = ak.arange(6).reshape(2,3)
      >>> a.to_ndarray()
      array([[0, 1, 2],
             [3, 4, 5]])
      >>> type(a.to_ndarray())
      numpy.ndarray



