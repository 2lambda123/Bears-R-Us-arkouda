:py:mod:`arkouda.dtypes`
========================

.. py:module:: arkouda.dtypes


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   arkouda.dtypes.dtype
   arkouda.dtypes.check_np_dtype
   arkouda.dtypes.translate_np_dtype
   arkouda.dtypes.resolve_scalar_dtype
   arkouda.dtypes.get_byteorder
   arkouda.dtypes.get_server_byteorder



Attributes
~~~~~~~~~~

.. autoapisummary::

   arkouda.dtypes.bool
   arkouda.dtypes.int64
   arkouda.dtypes.float64
   arkouda.dtypes.uint8
   arkouda.dtypes.uint64
   arkouda.dtypes.str_
   arkouda.dtypes.bigint
   arkouda.dtypes.intTypes
   arkouda.dtypes.bitType
   arkouda.dtypes.bool_scalars
   arkouda.dtypes.float_scalars
   arkouda.dtypes.int_scalars
   arkouda.dtypes.numeric_scalars
   arkouda.dtypes.numpy_scalars
   arkouda.dtypes.str_scalars
   arkouda.dtypes.all_scalars
   arkouda.dtypes.ARKOUDA_SUPPORTED_DTYPES
   arkouda.dtypes.DTypes
   arkouda.dtypes.DTypeObjects


.. py:function:: dtype(x)


.. py:data:: bool

   

.. py:data:: int64

   

.. py:data:: float64

   

.. py:data:: uint8

   

.. py:data:: uint64

   

.. py:data:: str_

   

.. py:data:: bigint

   

.. py:data:: intTypes

   

.. py:data:: bitType

   

.. py:data:: bool_scalars

   

.. py:data:: float_scalars

   

.. py:data:: int_scalars

   

.. py:data:: numeric_scalars

   

.. py:data:: numpy_scalars

   

.. py:data:: str_scalars

   

.. py:data:: all_scalars

   The DType enum defines the supported Arkouda data types in string form.

.. py:data:: ARKOUDA_SUPPORTED_DTYPES

   

.. py:data:: DTypes

   

.. py:data:: DTypeObjects

   

.. py:function:: check_np_dtype(dt: numpy.dtype) -> None

   Assert that numpy dtype dt is one of the dtypes supported
   by arkouda, otherwise raise TypeError.

   :raises TypeError: Raised if the dtype is not in supported dtypes or if
       dt is not a np.dtype


.. py:function:: translate_np_dtype(dt: numpy.dtype) -> Tuple[str, int]

   Split numpy dtype dt into its kind and byte size, raising
   TypeError for unsupported dtypes.

   :raises TypeError: Raised if the dtype is not in supported dtypes or if
       dt is not a np.dtype


.. py:function:: resolve_scalar_dtype(val: object) -> str

   Try to infer what dtype arkouda_server should treat val as.


.. py:function:: get_byteorder(dt: numpy.dtype) -> str

   Get a concrete byteorder (turns '=' into '<' or '>')


.. py:function:: get_server_byteorder() -> str

   Get the server's byteorder


