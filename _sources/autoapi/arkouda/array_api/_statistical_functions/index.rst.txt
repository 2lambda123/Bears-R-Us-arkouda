:orphan:

:py:mod:`arkouda.array_api._statistical_functions`
==================================================

.. py:module:: arkouda.array_api._statistical_functions


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   arkouda.array_api._statistical_functions.max
   arkouda.array_api._statistical_functions.mean
   arkouda.array_api._statistical_functions.min
   arkouda.array_api._statistical_functions.prod
   arkouda.array_api._statistical_functions.prod_sum_dtype
   arkouda.array_api._statistical_functions.std
   arkouda.array_api._statistical_functions.sum
   arkouda.array_api._statistical_functions.var



.. py:function:: max(x: arkouda.array_api._array_object.Array, /, *, axis: Optional[Union[int, Tuple[int, Ellipsis]]] = None, keepdims: bool = False) -> arkouda.array_api._array_object.Array


.. py:function:: mean(x: arkouda.array_api._array_object.Array, /, *, axis: Optional[Union[int, Tuple[int, Ellipsis]]] = None, keepdims: bool = False) -> arkouda.array_api._array_object.Array


.. py:function:: min(x: arkouda.array_api._array_object.Array, /, *, axis: Optional[Union[int, Tuple[int, Ellipsis]]] = None, keepdims: bool = False) -> arkouda.array_api._array_object.Array


.. py:function:: prod(x: arkouda.array_api._array_object.Array, /, *, axis: Optional[Union[int, Tuple[int, Ellipsis]]] = None, dtype: Optional[arkouda.array_api._typing.Dtype] = None, keepdims: bool = False) -> arkouda.array_api._array_object.Array


.. py:function:: prod_sum_dtype(dtype: arkouda.array_api._typing.Dtype) -> arkouda.array_api._typing.Dtype


.. py:function:: std(x: arkouda.array_api._array_object.Array, /, *, axis: Optional[Union[int, Tuple[int, Ellipsis]]] = None, correction: Union[int, float] = 0.0, keepdims: bool = False) -> arkouda.array_api._array_object.Array


.. py:function:: sum(x: arkouda.array_api._array_object.Array, /, *, axis: Optional[Union[int, Tuple[int, Ellipsis]]] = None, dtype: Optional[arkouda.array_api._typing.Dtype] = None, keepdims: bool = False) -> arkouda.array_api._array_object.Array


.. py:function:: var(x: arkouda.array_api._array_object.Array, /, *, axis: Optional[Union[int, Tuple[int, Ellipsis]]] = None, correction: Union[int, float] = 0.0, keepdims: bool = False) -> arkouda.array_api._array_object.Array


