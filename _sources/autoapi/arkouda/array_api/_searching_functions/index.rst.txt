:orphan:

:py:mod:`arkouda.array_api._searching_functions`
================================================

.. py:module:: arkouda.array_api._searching_functions


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   arkouda.array_api._searching_functions.argmax
   arkouda.array_api._searching_functions.argmin
   arkouda.array_api._searching_functions.nonzero
   arkouda.array_api._searching_functions.searchsorted
   arkouda.array_api._searching_functions.where



.. py:function:: argmax(x: arkouda.array_api._array_object.Array, /, *, axis: Optional[int] = None, keepdims: bool = False) -> arkouda.array_api._array_object.Array


.. py:function:: argmin(x: arkouda.array_api._array_object.Array, /, *, axis: Optional[int] = None, keepdims: bool = False) -> arkouda.array_api._array_object.Array


.. py:function:: nonzero(x: arkouda.array_api._array_object.Array, /) -> Tuple[arkouda.array_api._array_object.Array, Ellipsis]


.. py:function:: searchsorted(x1: arkouda.array_api._array_object.Array, x2: arkouda.array_api._array_object.Array, /, *, side: Literal[left, right] = 'left', sorter: Optional[arkouda.array_api._array_object.Array] = None) -> arkouda.array_api._array_object.Array


.. py:function:: where(condition: arkouda.array_api._array_object.Array, x1: arkouda.array_api._array_object.Array, x2: arkouda.array_api._array_object.Array, /) -> arkouda.array_api._array_object.Array


